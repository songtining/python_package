name: Build Calculated Value EXE 1021

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest

    steps:
    # 检出代码
    - name: Checkout Code
      uses: actions/checkout@v3

    # 设置 Python 环境
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.8  # 使用 Python 3.8，适配 Windows 7

    # 安装依赖
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller

    # 预先生成 .spec 文件
    - name: Generate spec file
      run: |
        pyinstaller --onefile --windowed --name calculated_value --noupx calculated_value.py || true

    # 修改 .spec 文件以支持 Windows 7
    - name: Add Windows 7 manifest
      run: |
        echo Modifying .spec file for Windows 7 compatibility...
        echo "manifest = \"\"\"" > manifest_content.py
        echo "<assembly xmlns=\"urn:schemas-microsoft-com:asm.v1\" manifestVersion=\"1.0\">" >> manifest_content.py
        echo "    <dependency>" >> manifest_content.py
        echo "        <dependentAssembly>" >> manifest_content.py
        echo "            <assemblyIdentity" >> manifest_content.py
        echo "                type=\"win32\"" >> manifest_content.py
        echo "                name=\"Microsoft.Windows.Common-Controls\"" >> manifest_content.py
        echo "                version=\"6.0.0.0\"" >> manifest_content.py
        echo "                processorArchitecture=\"*\"" >> manifest_content.py
        echo "                publicKeyToken=\"6595b64144ccf1df\"" >> manifest_content.py
        echo "                language=\"*\"" >> manifest_content.py
        echo "            />" >> manifest_content.py
        echo "        </dependentAssembly>" >> manifest_content.py
        echo "    </dependency>" >> manifest_content.py
        echo "</assembly>" >> manifest_content.py
        echo "\"\"\"" >> manifest_content.py
        python -c "with open('manifest_content.py', 'r') as mf, open('calculated_value.spec', 'r+') as spec: spec.write(mf.read() + spec.read())"

    # 使用修改后的 .spec 文件进行打包
    - name: Build EXE using spec file
      run: |
        pyinstaller calculated_value.spec

    # 将打包的文件保存到 GitHub Artifact
    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      with:
        name: calculated_value
        path: dist/calculated_value.exe
